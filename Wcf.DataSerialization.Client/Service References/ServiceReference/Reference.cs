//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wcf.DataSerialization.Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="UserDataContract", Namespace="http://schemas.datacontract.org/2004/07/Wcf.DataSerialization.Service")]
    [System.SerializableAttribute()]
    public partial class UserDataContract : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string MobileField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserEmailField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string UserNameField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Mobile {
            get {
                return this.MobileField;
            }
            set {
                if ((object.ReferenceEquals(this.MobileField, value) != true)) {
                    this.MobileField = value;
                    this.RaisePropertyChanged("Mobile");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserEmail {
            get {
                return this.UserEmailField;
            }
            set {
                if ((object.ReferenceEquals(this.UserEmailField, value) != true)) {
                    this.UserEmailField = value;
                    this.RaisePropertyChanged("UserEmail");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string UserName {
            get {
                return this.UserNameField;
            }
            set {
                if ((object.ReferenceEquals(this.UserNameField, value) != true)) {
                    this.UserNameField = value;
                    this.RaisePropertyChanged("UserName");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cnblogs.com/startcaft", ConfigurationName="ServiceReference.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/AddNewUser", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/AddNewUserResponse")]
        bool AddNewUser(Wcf.DataSerialization.Client.ServiceReference.UserDataContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/AddNewUser", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/AddNewUserResponse")]
        System.Threading.Tasks.Task<bool> AddNewUserAsync(Wcf.DataSerialization.Client.ServiceReference.UserDataContract user);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetUserByName", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetUserByNameResponse")]
        Wcf.DataSerialization.Client.ServiceReference.UserDataContract GetUserByName(string name);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetUserByName", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetUserByNameResponse")]
        System.Threading.Tasks.Task<Wcf.DataSerialization.Client.ServiceReference.UserDataContract> GetUserByNameAsync(string name);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Wcf.DataSerialization.Client.ServiceReference.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Wcf.DataSerialization.Client.ServiceReference.IWCFService>, Wcf.DataSerialization.Client.ServiceReference.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool AddNewUser(Wcf.DataSerialization.Client.ServiceReference.UserDataContract user) {
            return base.Channel.AddNewUser(user);
        }
        
        public System.Threading.Tasks.Task<bool> AddNewUserAsync(Wcf.DataSerialization.Client.ServiceReference.UserDataContract user) {
            return base.Channel.AddNewUserAsync(user);
        }
        
        public Wcf.DataSerialization.Client.ServiceReference.UserDataContract GetUserByName(string name) {
            return base.Channel.GetUserByName(name);
        }
        
        public System.Threading.Tasks.Task<Wcf.DataSerialization.Client.ServiceReference.UserDataContract> GetUserByNameAsync(string name) {
            return base.Channel.GetUserByNameAsync(name);
        }
    }
}
