//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="Func", Namespace="http://schemas.datacontract.org/2004/07/Wcf.UseDataTable_DataSet_Collection.Servi" +
        "ce")]
    [System.SerializableAttribute()]
    public partial class Func : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int pIdField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int pId {
            get {
                return this.pIdField;
            }
            set {
                if ((this.pIdField.Equals(value) != true)) {
                    this.pIdField = value;
                    this.RaisePropertyChanged("pId");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cnblogs.com/startcaft", ConfigurationName="ServiceReference.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByTable", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByTableResponse")]
        System.Data.DataTable GetDataByTable();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByTable", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByTableResponse")]
        System.Threading.Tasks.Task<System.Data.DataTable> GetDataByTableAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByDataSet", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByDataSetResponse")]
        System.Data.DataSet GetDataByDataSet();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByDataSet", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByDataSetResponse")]
        System.Threading.Tasks.Task<System.Data.DataSet> GetDataByDataSetAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByCollection", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByCollectionResponse")]
        Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.Func[] GetDataByCollection();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/GetDataByCollection", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/GetDataByCollectionResponse")]
        System.Threading.Tasks.Task<Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.Func[]> GetDataByCollectionAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.IWCFService>, Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public System.Data.DataTable GetDataByTable() {
            return base.Channel.GetDataByTable();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataTable> GetDataByTableAsync() {
            return base.Channel.GetDataByTableAsync();
        }
        
        public System.Data.DataSet GetDataByDataSet() {
            return base.Channel.GetDataByDataSet();
        }
        
        public System.Threading.Tasks.Task<System.Data.DataSet> GetDataByDataSetAsync() {
            return base.Channel.GetDataByDataSetAsync();
        }
        
        public Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.Func[] GetDataByCollection() {
            return base.Channel.GetDataByCollection();
        }
        
        public System.Threading.Tasks.Task<Wcf.UseDataTable_DataSet_Collection.Client.ServiceReference.Func[]> GetDataByCollectionAsync() {
            return base.Channel.GetDataByCollectionAsync();
        }
    }
}
