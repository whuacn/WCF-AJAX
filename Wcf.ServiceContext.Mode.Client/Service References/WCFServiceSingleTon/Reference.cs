//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.17929
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace Wcf.ServiceContext.Mode.Client.WCFServiceSingleTon {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="http://www.cnblogs.com/startcaft", ConfigurationName="WCFServiceSingleTon.IWCFService")]
    public interface IWCFService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/SayHello", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/SayHelloResponse")]
        void SayHello();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://www.cnblogs.com/startcaft/IWCFService/SayHello", ReplyAction="http://www.cnblogs.com/startcaft/IWCFService/SayHelloResponse")]
        System.Threading.Tasks.Task SayHelloAsync();
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IWCFServiceChannel : Wcf.ServiceContext.Mode.Client.WCFServiceSingleTon.IWCFService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class WCFServiceClient : System.ServiceModel.ClientBase<Wcf.ServiceContext.Mode.Client.WCFServiceSingleTon.IWCFService>, Wcf.ServiceContext.Mode.Client.WCFServiceSingleTon.IWCFService {
        
        public WCFServiceClient() {
        }
        
        public WCFServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public WCFServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public void SayHello() {
            base.Channel.SayHello();
        }
        
        public System.Threading.Tasks.Task SayHelloAsync() {
            return base.Channel.SayHelloAsync();
        }
    }
}
